# Copyright (c) 2012-2016 YCSB contributors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License. You
# may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License. See accompanying
# LICENSE file.

# Yahoo! Cloud System Benchmark
# Workload Template: Default Values
#
# File contains all properties that can be set to define a
# YCSB session. All properties are set to their default
# value if one exists. If not, the property is commented
# out. When a property has a finite number of settings,
# the default is enabled and the alternates are shown in
# comments below it.
# 
# Use of most explained through comments in Client.java or 
# CoreWorkload.java or on the YCSB wiki page:
# https://github.com/brianfrankcooper/YCSB/wiki/Core-Properties

# The name of the workload class to use
workload=site.ycsb.workloads.CoreWorkload

recordcount=9000000
operationcount=65000000

# The number of fields in a record
fieldcount=1
# The size of each field (in bytes)
# Note that if using fieldlengthdistribution=uniform or zipfian, this fieldlength is the max, not the average
fieldlength=20134

# Should read all fields
readallfields=true
writeallfields=true

# The distribution used to choose the length of a field
# The reference paper, "A large scale analysis of hundreds of in-memory cache clusters at Twitter",
# does not seem to provide an exact distribution. 
# Using constant for now.
fieldlengthdistribution=constant

# What proportion of operations are reads
readproportion=0.63
updateproportion=0.37
insertproportion=0
readmodifywriteproportion=0 
scanproportion=0

# Should records be inserted in order or pseudo-randomly
insertorder=hashed 
# The distribution of requests across the keyspace
requestdistribution=zipfian
zipfiantheta=0.4251
zipfianzeta=975904.12763762229588

